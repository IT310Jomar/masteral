import{d as I,aq as L,aO as k,c0 as B,a,o as O,c as d,e as u,M as h,s as o,f as F,c1 as R,C as p,D as C,aF as W,aG as G,U as J}from"./main.dc3150f2.js";const N=r=>(W("data-v-0a3805e7"),r=r(),G(),r),S={class:"borderless-table"},U={key:0},w={key:1},D=N(()=>h("td",{style:{"text-align":"center",border:"none"}}," No Data Found! ",-1)),H=[D],M=I({__name:"ChartJsPolarAreaChart",props:{colors:null},setup(r){const t=r,f=L(),P=k(()=>B(f.current.value)),n=a(),c=a(),l=a(),b=()=>p.get(C.API_URL+"user/dashboard/headcounts/employees/regular").then(e=>{e.data.success&&(n.value=e.data.counts)}),m=()=>p.get(C.API_URL+"user/dashboard/headcounts/employees/contigents").then(e=>{e.data.success&&(c.value=e.data.conti,l.value=e.data.onLeave)}),s=a();let i=a(),v=a(),_=a();return O(async()=>{await Promise.all([m(),b()]);const e=c.value+n.value+l.value,g=(c.value/e*100).toFixed()+"%",x=(n.value/e*100).toFixed()+"%",y=(l.value/e*100).toFixed()+"%",A={labels:["Contingent "+g,"Active (Regular) "+x,"On Leave "+y],datasets:[{borderWidth:0,label:["Contingent","Active (Regular)","On Leave"],data:[c.value,n.value,l.value],backgroundColor:[t.colors.polarChartWarning,t.colors.polarChartInfo,t.colors.polarChartGreen],hoverBackgroundColor:[t.colors.polarChartWarning,t.colors.polarChartInfo,t.colors.polarChartGreen],hoverBorderColor:"transparent",hoverBorderWidth:0}]};s.value=A,i=s.value.datasets[0].data[0],v=s.value.datasets[0].data[1],_=s.value.datasets[0].data[2]}),(e,g)=>(d(),u("section",null,[h("table",S,[o(i)!==0||o(v)!==0||o(_)!==0?(d(),u("tr",U,[h("td",null,[F(o(R),{height:360,"chart-data":o(s),"chart-options":o(P)},null,8,["chart-data","chart-options"])])])):(d(),u("tr",w,H))])]))}});const V=J(M,[["__scopeId","data-v-0a3805e7"]]);export{V as default};
